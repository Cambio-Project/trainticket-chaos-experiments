services:
  - service_name: train-ticket
    protocol: http
    response_content_type: json
    hosts:
      # IP/Domain of target e.g.:
      - 192.168.1.120:8080/api/v1
    common_headers:
      Content-Type: application/json

# Simulates requests generated by a user on the web UI
# Includes logging in, querying information, making a booking and paying for it, etc.
user_requests:
  #Generate captcha Picture
  # - service_name: train-ticket
  #   method: GET
  #   uri:
  #     type: COMPOSITE
  #     children:
  #       - text: '/verifycode/generate'
  #   expected_response_codes:
  #     - 200
  # Login with Credentials
  - service_name: train-ticket
    method: POST
    uri:
      type: COMPOSITE
      children:
        - text: '/users/login'
    body:
      type: COMPOSITE
      children:
        # Uses "user01" to "user99" as user and password
        # - text: '{"username": "user'
        # - type: RANDOMINT
        #   text: 01,100
        #   store_as: username
        # - text: '","password": "user'
        # - type: VARIABLE
        #   text: username
        # - text: '"}'
        # Alternate login if other users aren't present
        - text: '{"username": "fdse_microservice","password": "111111"}'
    expected_response_codes:
      - 200
  # Search for trains #1 (occasional erroneous input)
  - service_name: train-ticket
    method: POST
    uri:
      type: COMPOSITE
      children:
        - text: '/travelservice/trips/left'
        # Extract the login token from last response
        - type: EXTRACTSILENT
          text: 'data.token'
          store_as: token
        - type: EXTRACTSILENT
          text: 'data.userId'
          store_as: accountid
    body:
      type: COMPOSITE
      children:
        - text: '{"startingPlace":"'
        - type: RANDOMOF
          text: ',Shang 0Hai,Su Zhou,Nan Jing,Shi Jia Zhuang,Tai Yuan'
          store_as: startstation
        - text: '","endPlace":"'
        - type: RANDOMOF
          text: ',Shang Hai,Su Zhou,Nan Jing,Shi Jia Zhuang,Tai Yuan'
          store_as: endstation
        - text: '","departureTime":"'
        - type: COMPOSITE
          store_as: departuretime
          children:
            - type: RANDOMINT
              text: 2020,2040
              store_as: year
            - text: '-'
            - type: RANDOMINT
              text: 01,13
              store_as: month
            - text: '-01'
        - text: '"}'
    expected_response_codes:
      - 200
  # Search for trains #2 (occasional erroneous input)
  - service_name: train-ticket
    method: POST
    uri:
      type: COMPOSITE
      children:
        - text: '/travel2service/trips/left'
    body:
      type: COMPOSITE
      children:
        - text: '{"startingPlace":"'
        - type: VARIABLE
          text: startstation
        - text: '","endPlace":"'
        - type: VARIABLE
          text: endstation
        - text: '","departureTime":"'
        - type: VARIABLE
          text: departuretime
        - text: '"}'
    expected_response_codes:
      - 200  
  # Retrieve contact data for booking
  - service_name: train-ticket
    method: GET
    uri:
      type: COMPOSITE
      children:
        - text: '/contactservice/contacts/account/'
        - type: VARIABLE
          text: accountid
    # Add login token
    headers:
      Authorization:
        type: COMPOSITE
        children:
          - text: 'Bearer '
          - type: VARIABLE
            text: token
    expected_response_codes:
      - 200
  # Retrieve assurance information
  - service_name: train-ticket
    method: GET
    uri:
      type: COMPOSITE
      children:
        - text: '/assuranceservice/assurances/types'
        - type: EXTRACTSILENT
          text: 'data.RANDOM_ARRAY_FIELD.id'
          store_as: contactsid
    # Add login token
    headers:
      Authorization:
        type: COMPOSITE
        children:
          - text: 'Bearer '
          - type: VARIABLE
            text: token
    expected_response_codes:
      - 200
  # Get food information (occasional erroneous input)
  - service_name: train-ticket
    method: GET
    uri:
      type: COMPOSITE
      children:
        - text: '/foodservice/foods/'
        - type: VARIABLE
          text: departuretime
        - text: '/'
        - type: VARIABLE
          text: startstation
        - text: '/'
        - type: VARIABLE
          text: endstation
        - text: '/'
        - type: RANDOMOF
          text: ',D1345,Z1234,T1235,G1234,Z1236'
          store_as: tripid
    expected_response_codes:
      - 200
  # Book Ticket (Trips starting with G or D)
  - service_name: train-ticket
    method: POST
    uri:
      type: COMPOSITE
      children:
        - text: '/preserveservice/preserve'
    body:
      type: COMPOSITE
      children:
        - text: '{"accountId":"'
        - type: VARIABLE
          text: accountid
        - text: '","contactsId":"'
        - type: VARIABLE
          text: contactsid
        - type: RANDOMOF
          # Chooses between invalid or valid booking request
          text: ';","tripId":"D1345","seatType":"2","date":"2021-12-12","from":"Shang Hai","to":"Su Zhou","assurance":"0","foodType": "1","stationName":"","storeName":"","foodName":"Bone Soup","foodPrice":"2.5"};","tripId":"ABDEFG","seatType":"2","date":"2021-12-12","from":"Shang Hai","to":"Su Zhou","assurance":"0","foodType": "1","stationName":"","storeName":"","foodName":"Bone Soup","foodPrice":"2.5"};'
    # Add login token
    headers:
      Authorization:
        type: COMPOSITE
        children:
          - text: 'Bearer '
          - type: VARIABLE
            text: token
    expected_response_codes:
      - 200
      - 500 # if invalid booking request was sent
  # Book Ticket (Trips NOT starting with G or D)
  - service_name: train-ticket
    method: POST
    uri:
      type: COMPOSITE
      children:
        - text: '/preserveotherservice/preserveOther'
    body:
      type: COMPOSITE
      children:
        - text: '{"accountId":"'
        - type: VARIABLE
          text: accountid
        - text: '","contactsId":"'
        - type: VARIABLE
          text: contactsid
        - type: RANDOMOF
          # Chooses between invalid or valid booking request
          text: ';","tripId":"Z1234","seatType":"2","date":"2021-12-12","from":"Shang Hai","to":"Nan Jing","assurance":"1","foodType": "0"};","tripId":"ABDEFG","seatType":"2","date":"2021-12-12","from":"Shang Hai","to":"Nan Jing","assurance":"1","foodType": "0"};'
    # Add login token
    headers:
      Authorization:
        type: COMPOSITE
        children:
          - text: 'Bearer '
          - type: VARIABLE
            text: token
    expected_response_codes:
      - 200
      - 500 # If invalid booking request was sent
  # Query Order list 1
  - service_name: train-ticket
    method: POST
    uri:
      type: COMPOSITE
      children:
        - text: '/orderservice/order/refresh'
    body:
      type: COMPOSITE
      children:
        - text: '{"loginId":"'
        - type: VARIABLE
          text: accountid
        - text: '","enableStateQuery":false,"enableTravelDateQuery":false,"enableBoughtDateQuery":false,"travelDateStart":null,"travelDateEnd":null,"boughtDateStart":null,"boughtDateEnd":null}'
    # Add login token
    headers:
      Authorization:
        type: COMPOSITE
        children:
          - text: 'Bearer '
          - type: VARIABLE
            text: token
    expected_response_codes:
      - 200
  # Query Order list 2
  - service_name: train-ticket
    method: POST
    uri:
      type: COMPOSITE
      children:
        - text: '/orderOtherService/orderOther/refresh'
        - type: EXTRACTSILENT
          text: 'data.RANDOM_ARRAY_FIELD.id'
          store_as: orderid
    body:
      type: COMPOSITE
      children:
        - text: '{"loginId":"'
        - type: VARIABLE
          text: accountid
        - text: '","enableStateQuery":false,"enableTravelDateQuery":false,"enableBoughtDateQuery":false,"travelDateStart":null,"travelDateEnd":null,"boughtDateStart":null,"boughtDateEnd":null}'
    # Add login token
    headers:
      Authorization:
        type: COMPOSITE
        children:
          - text: 'Bearer '
          - type: VARIABLE
            text: token
    expected_response_codes:
      - 200
  # Pay for a random order 1 (fails if selected order is already paid for)
  - service_name: train-ticket
    method: POST
    uri:
      type: COMPOSITE
      children:
        - text: '/inside_pay_service/inside_payment'
        - type: EXTRACTSILENT
          text: 'data.RANDOM_ARRAY_FIELD.id'
          store_as: orderidother
    body:
      type: COMPOSITE
      children:
        - text: '{"orderId":"'
        - type: VARIABLE
          text: orderid
        - text: '","tripId":"D1345"}'
    # Add login token
    headers:
      Authorization:
        type: COMPOSITE
        children:
          - text: 'Bearer '
          - type: VARIABLE
            text: token
    expected_response_codes:
      - 200
  # Pay for a random order 2 (fails if selected order is already paid for)
  - service_name: train-ticket
    method: POST
    uri:
      type: COMPOSITE
      children:
        - text: '/inside_pay_service/inside_payment'
    body:
      type: COMPOSITE
      children:
        - text: '{"orderId":"'
        - type: VARIABLE
          text: orderidother
        - text: '","tripId":"Z1234"}'
    # Add login token
    headers:
      Authorization:
        type: COMPOSITE
        children:
          - text: 'Bearer '
          - type: VARIABLE
            text: token
    expected_response_codes:
      - 200
  # Consign order
  # TODO
  # Retrieve consign list
  - service_name: train-ticket
    method: GET
    uri:
      type: COMPOSITE
      children:
        - text: '/consignservice/consigns/account/'
        - type: VARIABLE
          text: accountid
    # Add login token
    headers:
      Authorization:
        type: COMPOSITE
        children:
          - text: 'Bearer '
          - type: VARIABLE
            text: token
    expected_response_codes:
      - 200
  # Collect random ticket 1 (fails if selected order is not paid for)
  - service_name: train-ticket
    method: GET
    uri:
      type: COMPOSITE
      children:
        - text: '/executeservice/execute/collected/'
        - type: VARIABLE
          text: orderid
    # Add login token
    headers:
      Authorization:
        type: COMPOSITE
        children:
          - text: 'Bearer '
          - type: VARIABLE
            text: token
    expected_response_codes:
      - 200
  # Collect random ticket 2 (fails if selected order is not paid for)
  - service_name: train-ticket
    method: GET
    uri:
      type: COMPOSITE
      children:
        - text: '/executeservice/execute/collected/'
        - type: VARIABLE
          text: orderidother
    # Add login token
    headers:
      Authorization:
        type: COMPOSITE
        children:
          - text: 'Bearer '
          - type: VARIABLE
            text: token
    expected_response_codes:
      - 200
  # Enter random station 1 (fails if selected order is not collected)
  - service_name: train-ticket
    method: GET
    uri:
      type: COMPOSITE
      children:
        - text: '/executeservice/execute/execute/'
        - type: VARIABLE
          text: orderid
    # Add login token
    headers:
      Authorization:
        type: COMPOSITE
        children:
          - text: 'Bearer '
          - type: VARIABLE
            text: token
    expected_response_codes:
      - 200
  # Enter random station 2 (fails if selected order is not collected)
  - service_name: train-ticket
    method: GET
    uri:
      type: COMPOSITE
      children:
        - text: '/executeservice/execute/execute/'
        - type: VARIABLE
          text: orderidother
    # Add login token
    headers:
      Authorization:
        type: COMPOSITE
        children:
          - text: 'Bearer '
          - type: VARIABLE
            text: token
    expected_response_codes:
      - 200
